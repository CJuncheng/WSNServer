//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace WSNServer.DB
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class WirelessSensorNetworkEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“WirelessSensorNetworkEntities”部分中的连接字符串初始化新 WirelessSensorNetworkEntities 对象。
        /// </summary>
        public WirelessSensorNetworkEntities() : base("name=WirelessSensorNetworkEntities", "WirelessSensorNetworkEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WirelessSensorNetworkEntities 对象。
        /// </summary>
        public WirelessSensorNetworkEntities(string connectionString) : base(connectionString, "WirelessSensorNetworkEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 WirelessSensorNetworkEntities 对象。
        /// </summary>
        public WirelessSensorNetworkEntities(EntityConnection connection) : base(connection, "WirelessSensorNetworkEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNCheckNodeAddress> WSNCheckNodeAddresses
        {
            get
            {
                if ((_WSNCheckNodeAddresses == null))
                {
                    _WSNCheckNodeAddresses = base.CreateObjectSet<WSNCheckNodeAddress>("WSNCheckNodeAddresses");
                }
                return _WSNCheckNodeAddresses;
            }
        }
        private ObjectSet<WSNCheckNodeAddress> _WSNCheckNodeAddresses;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNCheckNodeLost> WSNCheckNodeLosts
        {
            get
            {
                if ((_WSNCheckNodeLosts == null))
                {
                    _WSNCheckNodeLosts = base.CreateObjectSet<WSNCheckNodeLost>("WSNCheckNodeLosts");
                }
                return _WSNCheckNodeLosts;
            }
        }
        private ObjectSet<WSNCheckNodeLost> _WSNCheckNodeLosts;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNCity> WSNCities
        {
            get
            {
                if ((_WSNCities == null))
                {
                    _WSNCities = base.CreateObjectSet<WSNCity>("WSNCities");
                }
                return _WSNCities;
            }
        }
        private ObjectSet<WSNCity> _WSNCities;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNDrawTopologyTable> WSNDrawTopologyTables
        {
            get
            {
                if ((_WSNDrawTopologyTables == null))
                {
                    _WSNDrawTopologyTables = base.CreateObjectSet<WSNDrawTopologyTable>("WSNDrawTopologyTables");
                }
                return _WSNDrawTopologyTables;
            }
        }
        private ObjectSet<WSNDrawTopologyTable> _WSNDrawTopologyTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNEveryDayLai> WSNEveryDayLais
        {
            get
            {
                if ((_WSNEveryDayLais == null))
                {
                    _WSNEveryDayLais = base.CreateObjectSet<WSNEveryDayLai>("WSNEveryDayLais");
                }
                return _WSNEveryDayLais;
            }
        }
        private ObjectSet<WSNEveryDayLai> _WSNEveryDayLais;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNLAI> WSNLAIs
        {
            get
            {
                if ((_WSNLAIs == null))
                {
                    _WSNLAIs = base.CreateObjectSet<WSNLAI>("WSNLAIs");
                }
                return _WSNLAIs;
            }
        }
        private ObjectSet<WSNLAI> _WSNLAIs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNMail_Code> WSNMail_Code
        {
            get
            {
                if ((_WSNMail_Code == null))
                {
                    _WSNMail_Code = base.CreateObjectSet<WSNMail_Code>("WSNMail_Code");
                }
                return _WSNMail_Code;
            }
        }
        private ObjectSet<WSNMail_Code> _WSNMail_Code;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNMessageRecevieTable> WSNMessageRecevieTables
        {
            get
            {
                if ((_WSNMessageRecevieTables == null))
                {
                    _WSNMessageRecevieTables = base.CreateObjectSet<WSNMessageRecevieTable>("WSNMessageRecevieTables");
                }
                return _WSNMessageRecevieTables;
            }
        }
        private ObjectSet<WSNMessageRecevieTable> _WSNMessageRecevieTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNNeighborTable> WSNNeighborTables
        {
            get
            {
                if ((_WSNNeighborTables == null))
                {
                    _WSNNeighborTables = base.CreateObjectSet<WSNNeighborTable>("WSNNeighborTables");
                }
                return _WSNNeighborTables;
            }
        }
        private ObjectSet<WSNNeighborTable> _WSNNeighborTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNNodeLocationTable> WSNNodeLocationTables
        {
            get
            {
                if ((_WSNNodeLocationTables == null))
                {
                    _WSNNodeLocationTables = base.CreateObjectSet<WSNNodeLocationTable>("WSNNodeLocationTables");
                }
                return _WSNNodeLocationTables;
            }
        }
        private ObjectSet<WSNNodeLocationTable> _WSNNodeLocationTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNReadUploadData> WSNReadUploadDatas
        {
            get
            {
                if ((_WSNReadUploadDatas == null))
                {
                    _WSNReadUploadDatas = base.CreateObjectSet<WSNReadUploadData>("WSNReadUploadDatas");
                }
                return _WSNReadUploadDatas;
            }
        }
        private ObjectSet<WSNReadUploadData> _WSNReadUploadDatas;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNRouteTable> WSNRouteTables
        {
            get
            {
                if ((_WSNRouteTables == null))
                {
                    _WSNRouteTables = base.CreateObjectSet<WSNRouteTable>("WSNRouteTables");
                }
                return _WSNRouteTables;
            }
        }
        private ObjectSet<WSNRouteTable> _WSNRouteTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNRTUploadData> WSNRTUploadDatas
        {
            get
            {
                if ((_WSNRTUploadDatas == null))
                {
                    _WSNRTUploadDatas = base.CreateObjectSet<WSNRTUploadData>("WSNRTUploadDatas");
                }
                return _WSNRTUploadDatas;
            }
        }
        private ObjectSet<WSNRTUploadData> _WSNRTUploadDatas;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNUploadData> WSNUploadDatas
        {
            get
            {
                if ((_WSNUploadDatas == null))
                {
                    _WSNUploadDatas = base.CreateObjectSet<WSNUploadData>("WSNUploadDatas");
                }
                return _WSNUploadDatas;
            }
        }
        private ObjectSet<WSNUploadData> _WSNUploadDatas;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNUser> WSNUsers
        {
            get
            {
                if ((_WSNUsers == null))
                {
                    _WSNUsers = base.CreateObjectSet<WSNUser>("WSNUsers");
                }
                return _WSNUsers;
            }
        }
        private ObjectSet<WSNUser> _WSNUsers;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNUser_WSNCity> WSNUser_WSNCity
        {
            get
            {
                if ((_WSNUser_WSNCity == null))
                {
                    _WSNUser_WSNCity = base.CreateObjectSet<WSNUser_WSNCity>("WSNUser_WSNCity");
                }
                return _WSNUser_WSNCity;
            }
        }
        private ObjectSet<WSNUser_WSNCity> _WSNUser_WSNCity;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNEveryDayLaiBK20210910> WSNEveryDayLaiBK20210910
        {
            get
            {
                if ((_WSNEveryDayLaiBK20210910 == null))
                {
                    _WSNEveryDayLaiBK20210910 = base.CreateObjectSet<WSNEveryDayLaiBK20210910>("WSNEveryDayLaiBK20210910");
                }
                return _WSNEveryDayLaiBK20210910;
            }
        }
        private ObjectSet<WSNEveryDayLaiBK20210910> _WSNEveryDayLaiBK20210910;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<wsneverydaylaibk20211213> wsneverydaylaibk20211213
        {
            get
            {
                if ((_wsneverydaylaibk20211213 == null))
                {
                    _wsneverydaylaibk20211213 = base.CreateObjectSet<wsneverydaylaibk20211213>("wsneverydaylaibk20211213");
                }
                return _wsneverydaylaibk20211213;
            }
        }
        private ObjectSet<wsneverydaylaibk20211213> _wsneverydaylaibk20211213;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNTimeSetTable> WSNTimeSetTables
        {
            get
            {
                if ((_WSNTimeSetTables == null))
                {
                    _WSNTimeSetTables = base.CreateObjectSet<WSNTimeSetTable>("WSNTimeSetTables");
                }
                return _WSNTimeSetTables;
            }
        }
        private ObjectSet<WSNTimeSetTable> _WSNTimeSetTables;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WSNImagesPath> WSNImagesPaths
        {
            get
            {
                if ((_WSNImagesPaths == null))
                {
                    _WSNImagesPaths = base.CreateObjectSet<WSNImagesPath>("WSNImagesPaths");
                }
                return _WSNImagesPaths;
            }
        }
        private ObjectSet<WSNImagesPath> _WSNImagesPaths;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 sysdiagrams EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// 用于向 WSNCheckNodeAddresses EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNCheckNodeAddresses(WSNCheckNodeAddress wSNCheckNodeAddress)
        {
            base.AddObject("WSNCheckNodeAddresses", wSNCheckNodeAddress);
        }
    
        /// <summary>
        /// 用于向 WSNCheckNodeLosts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNCheckNodeLosts(WSNCheckNodeLost wSNCheckNodeLost)
        {
            base.AddObject("WSNCheckNodeLosts", wSNCheckNodeLost);
        }
    
        /// <summary>
        /// 用于向 WSNCities EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNCities(WSNCity wSNCity)
        {
            base.AddObject("WSNCities", wSNCity);
        }
    
        /// <summary>
        /// 用于向 WSNDrawTopologyTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNDrawTopologyTables(WSNDrawTopologyTable wSNDrawTopologyTable)
        {
            base.AddObject("WSNDrawTopologyTables", wSNDrawTopologyTable);
        }
    
        /// <summary>
        /// 用于向 WSNEveryDayLais EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNEveryDayLais(WSNEveryDayLai wSNEveryDayLai)
        {
            base.AddObject("WSNEveryDayLais", wSNEveryDayLai);
        }
    
        /// <summary>
        /// 用于向 WSNLAIs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNLAIs(WSNLAI wSNLAI)
        {
            base.AddObject("WSNLAIs", wSNLAI);
        }
    
        /// <summary>
        /// 用于向 WSNMail_Code EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNMail_Code(WSNMail_Code wSNMail_Code)
        {
            base.AddObject("WSNMail_Code", wSNMail_Code);
        }
    
        /// <summary>
        /// 用于向 WSNMessageRecevieTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNMessageRecevieTables(WSNMessageRecevieTable wSNMessageRecevieTable)
        {
            base.AddObject("WSNMessageRecevieTables", wSNMessageRecevieTable);
        }
    
        /// <summary>
        /// 用于向 WSNNeighborTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNNeighborTables(WSNNeighborTable wSNNeighborTable)
        {
            base.AddObject("WSNNeighborTables", wSNNeighborTable);
        }
    
        /// <summary>
        /// 用于向 WSNNodeLocationTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNNodeLocationTables(WSNNodeLocationTable wSNNodeLocationTable)
        {
            base.AddObject("WSNNodeLocationTables", wSNNodeLocationTable);
        }
    
        /// <summary>
        /// 用于向 WSNReadUploadDatas EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNReadUploadDatas(WSNReadUploadData wSNReadUploadData)
        {
            base.AddObject("WSNReadUploadDatas", wSNReadUploadData);
        }
    
        /// <summary>
        /// 用于向 WSNRouteTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNRouteTables(WSNRouteTable wSNRouteTable)
        {
            base.AddObject("WSNRouteTables", wSNRouteTable);
        }
    
        /// <summary>
        /// 用于向 WSNRTUploadDatas EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNRTUploadDatas(WSNRTUploadData wSNRTUploadData)
        {
            base.AddObject("WSNRTUploadDatas", wSNRTUploadData);
        }
    
        /// <summary>
        /// 用于向 WSNUploadDatas EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNUploadDatas(WSNUploadData wSNUploadData)
        {
            base.AddObject("WSNUploadDatas", wSNUploadData);
        }
    
        /// <summary>
        /// 用于向 WSNUsers EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNUsers(WSNUser wSNUser)
        {
            base.AddObject("WSNUsers", wSNUser);
        }
    
        /// <summary>
        /// 用于向 WSNUser_WSNCity EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNUser_WSNCity(WSNUser_WSNCity wSNUser_WSNCity)
        {
            base.AddObject("WSNUser_WSNCity", wSNUser_WSNCity);
        }
    
        /// <summary>
        /// 用于向 WSNEveryDayLaiBK20210910 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNEveryDayLaiBK20210910(WSNEveryDayLaiBK20210910 wSNEveryDayLaiBK20210910)
        {
            base.AddObject("WSNEveryDayLaiBK20210910", wSNEveryDayLaiBK20210910);
        }
    
        /// <summary>
        /// 用于向 wsneverydaylaibk20211213 EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTowsneverydaylaibk20211213(wsneverydaylaibk20211213 wsneverydaylaibk20211213)
        {
            base.AddObject("wsneverydaylaibk20211213", wsneverydaylaibk20211213);
        }
    
        /// <summary>
        /// 用于向 WSNTimeSetTables EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNTimeSetTables(WSNTimeSetTable wSNTimeSetTable)
        {
            base.AddObject("WSNTimeSetTables", wSNTimeSetTable);
        }
    
        /// <summary>
        /// 用于向 WSNImagesPaths EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWSNImagesPaths(WSNImagesPath wSNImagesPath)
        {
            base.AddObject("WSNImagesPaths", wSNImagesPath);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 sysdiagram 对象。
        /// </summary>
        /// <param name="name">name 属性的初始值。</param>
        /// <param name="principal_id">principal_id 属性的初始值。</param>
        /// <param name="diagram_id">diagram_id 属性的初始值。</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNCheckNodeAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNCheckNodeAddress : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNCheckNodeAddress 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="checkNode">CheckNode 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNCheckNodeAddress CreateWSNCheckNodeAddress(global::System.Int32 id, global::System.String checkNode, global::System.Int32 cityID)
        {
            WSNCheckNodeAddress wSNCheckNodeAddress = new WSNCheckNodeAddress();
            wSNCheckNodeAddress.ID = id;
            wSNCheckNodeAddress.CheckNode = checkNode;
            wSNCheckNodeAddress.CityID = cityID;
            return wSNCheckNodeAddress;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckNode
        {
            get
            {
                return _CheckNode;
            }
            set
            {
                OnCheckNodeChanging(value);
                ReportPropertyChanging("CheckNode");
                _CheckNode = StructuralObject.SetValidValue(value, false, "CheckNode");
                ReportPropertyChanged("CheckNode");
                OnCheckNodeChanged();
            }
        }
        private global::System.String _CheckNode;
        partial void OnCheckNodeChanging(global::System.String value);
        partial void OnCheckNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNCheckNodeLost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNCheckNodeLost : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNCheckNodeLost 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="date_t">Date_t 属性的初始值。</param>
        /// <param name="last_id">Last_id 属性的初始值。</param>
        public static WSNCheckNodeLost CreateWSNCheckNodeLost(global::System.Int32 id, global::System.DateTime date_t, global::System.Int32 last_id)
        {
            WSNCheckNodeLost wSNCheckNodeLost = new WSNCheckNodeLost();
            wSNCheckNodeLost.ID = id;
            wSNCheckNodeLost.Date_t = date_t;
            wSNCheckNodeLost.Last_id = last_id;
            return wSNCheckNodeLost;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_t
        {
            get
            {
                return _Date_t;
            }
            set
            {
                OnDate_tChanging(value);
                ReportPropertyChanging("Date_t");
                _Date_t = StructuralObject.SetValidValue(value, "Date_t");
                ReportPropertyChanged("Date_t");
                OnDate_tChanged();
            }
        }
        private global::System.DateTime _Date_t;
        partial void OnDate_tChanging(global::System.DateTime value);
        partial void OnDate_tChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Last_id
        {
            get
            {
                return _Last_id;
            }
            set
            {
                OnLast_idChanging(value);
                ReportPropertyChanging("Last_id");
                _Last_id = StructuralObject.SetValidValue(value, "Last_id");
                ReportPropertyChanged("Last_id");
                OnLast_idChanged();
            }
        }
        private global::System.Int32 _Last_id;
        partial void OnLast_idChanging(global::System.Int32 value);
        partial void OnLast_idChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNCity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNCity 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static WSNCity CreateWSNCity(global::System.Int32 id)
        {
            WSNCity wSNCity = new WSNCity();
            wSNCity.ID = id;
            return wSNCity;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true, "CityName");
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNDrawTopologyTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNDrawTopologyTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNDrawTopologyTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNDrawTopologyTable CreateWSNDrawTopologyTable(global::System.Int32 id, global::System.DateTime uploadTime, global::System.Int32 cityID)
        {
            WSNDrawTopologyTable wSNDrawTopologyTable = new WSNDrawTopologyTable();
            wSNDrawTopologyTable.ID = id;
            wSNDrawTopologyTable.UploadTime = uploadTime;
            wSNDrawTopologyTable.CityID = cityID;
            return wSNDrawTopologyTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TopologyString
        {
            get
            {
                return _TopologyString;
            }
            set
            {
                OnTopologyStringChanging(value);
                ReportPropertyChanging("TopologyString");
                _TopologyString = StructuralObject.SetValidValue(value, true, "TopologyString");
                ReportPropertyChanged("TopologyString");
                OnTopologyStringChanged();
            }
        }
        private global::System.String _TopologyString;
        partial void OnTopologyStringChanging(global::System.String value);
        partial void OnTopologyStringChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNEveryDayLai")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNEveryDayLai : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNEveryDayLai 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="date_t">Date_t 属性的初始值。</param>
        /// <param name="lai">Lai 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNEveryDayLai CreateWSNEveryDayLai(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime date_t, global::System.Decimal lai, global::System.Int32 cityID)
        {
            WSNEveryDayLai wSNEveryDayLai = new WSNEveryDayLai();
            wSNEveryDayLai.ID = id;
            wSNEveryDayLai.NodeAddress = nodeAddress;
            wSNEveryDayLai.Date_t = date_t;
            wSNEveryDayLai.Lai = lai;
            wSNEveryDayLai.CityID = cityID;
            return wSNEveryDayLai;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_t
        {
            get
            {
                return _Date_t;
            }
            set
            {
                OnDate_tChanging(value);
                ReportPropertyChanging("Date_t");
                _Date_t = StructuralObject.SetValidValue(value, "Date_t");
                ReportPropertyChanged("Date_t");
                OnDate_tChanged();
            }
        }
        private global::System.DateTime _Date_t;
        partial void OnDate_tChanging(global::System.DateTime value);
        partial void OnDate_tChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                OnLaiChanging(value);
                ReportPropertyChanging("Lai");
                _Lai = StructuralObject.SetValidValue(value, "Lai");
                ReportPropertyChanged("Lai");
                OnLaiChanged();
            }
        }
        private global::System.Decimal _Lai;
        partial void OnLaiChanging(global::System.Decimal value);
        partial void OnLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNEveryDayLaiBK20210910")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNEveryDayLaiBK20210910 : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNEveryDayLaiBK20210910 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="date_t">Date_t 属性的初始值。</param>
        /// <param name="lai">Lai 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNEveryDayLaiBK20210910 CreateWSNEveryDayLaiBK20210910(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime date_t, global::System.Decimal lai, global::System.Int32 cityID)
        {
            WSNEveryDayLaiBK20210910 wSNEveryDayLaiBK20210910 = new WSNEveryDayLaiBK20210910();
            wSNEveryDayLaiBK20210910.ID = id;
            wSNEveryDayLaiBK20210910.NodeAddress = nodeAddress;
            wSNEveryDayLaiBK20210910.Date_t = date_t;
            wSNEveryDayLaiBK20210910.Lai = lai;
            wSNEveryDayLaiBK20210910.CityID = cityID;
            return wSNEveryDayLaiBK20210910;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                if (_NodeAddress != value)
                {
                    OnNodeAddressChanging(value);
                    ReportPropertyChanging("NodeAddress");
                    _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                    ReportPropertyChanged("NodeAddress");
                    OnNodeAddressChanged();
                }
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_t
        {
            get
            {
                return _Date_t;
            }
            set
            {
                if (_Date_t != value)
                {
                    OnDate_tChanging(value);
                    ReportPropertyChanging("Date_t");
                    _Date_t = StructuralObject.SetValidValue(value, "Date_t");
                    ReportPropertyChanged("Date_t");
                    OnDate_tChanged();
                }
            }
        }
        private global::System.DateTime _Date_t;
        partial void OnDate_tChanging(global::System.DateTime value);
        partial void OnDate_tChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                if (_Lai != value)
                {
                    OnLaiChanging(value);
                    ReportPropertyChanging("Lai");
                    _Lai = StructuralObject.SetValidValue(value, "Lai");
                    ReportPropertyChanged("Lai");
                    OnLaiChanged();
                }
            }
        }
        private global::System.Decimal _Lai;
        partial void OnLaiChanging(global::System.Decimal value);
        partial void OnLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value, "CityID");
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="wsneverydaylaibk20211213")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class wsneverydaylaibk20211213 : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 wsneverydaylaibk20211213 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="date_t">Date_t 属性的初始值。</param>
        /// <param name="lai">Lai 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static wsneverydaylaibk20211213 Createwsneverydaylaibk20211213(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime date_t, global::System.Decimal lai, global::System.Int32 cityID)
        {
            wsneverydaylaibk20211213 wsneverydaylaibk20211213 = new wsneverydaylaibk20211213();
            wsneverydaylaibk20211213.ID = id;
            wsneverydaylaibk20211213.NodeAddress = nodeAddress;
            wsneverydaylaibk20211213.Date_t = date_t;
            wsneverydaylaibk20211213.Lai = lai;
            wsneverydaylaibk20211213.CityID = cityID;
            return wsneverydaylaibk20211213;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                if (_NodeAddress != value)
                {
                    OnNodeAddressChanging(value);
                    ReportPropertyChanging("NodeAddress");
                    _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                    ReportPropertyChanged("NodeAddress");
                    OnNodeAddressChanged();
                }
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date_t
        {
            get
            {
                return _Date_t;
            }
            set
            {
                if (_Date_t != value)
                {
                    OnDate_tChanging(value);
                    ReportPropertyChanging("Date_t");
                    _Date_t = StructuralObject.SetValidValue(value, "Date_t");
                    ReportPropertyChanged("Date_t");
                    OnDate_tChanged();
                }
            }
        }
        private global::System.DateTime _Date_t;
        partial void OnDate_tChanging(global::System.DateTime value);
        partial void OnDate_tChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                if (_Lai != value)
                {
                    OnLaiChanging(value);
                    ReportPropertyChanging("Lai");
                    _Lai = StructuralObject.SetValidValue(value, "Lai");
                    ReportPropertyChanged("Lai");
                    OnLaiChanged();
                }
            }
        }
        private global::System.Decimal _Lai;
        partial void OnLaiChanging(global::System.Decimal value);
        partial void OnLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                if (_CityID != value)
                {
                    OnCityIDChanging(value);
                    ReportPropertyChanging("CityID");
                    _CityID = StructuralObject.SetValidValue(value, "CityID");
                    ReportPropertyChanged("CityID");
                    OnCityIDChanged();
                }
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNImagesPath")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNImagesPath : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNImagesPath 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        /// <param name="uploadDate">UploadDate 属性的初始值。</param>
        /// <param name="imageName">ImageName 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        public static WSNImagesPath CreateWSNImagesPath(global::System.Int32 id, global::System.Int32 cityID, global::System.DateTime uploadDate, global::System.String imageName, global::System.String nodeAddress)
        {
            WSNImagesPath wSNImagesPath = new WSNImagesPath();
            wSNImagesPath.ID = id;
            wSNImagesPath.CityID = cityID;
            wSNImagesPath.UploadDate = uploadDate;
            wSNImagesPath.ImageName = imageName;
            wSNImagesPath.NodeAddress = nodeAddress;
            return wSNImagesPath;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadDate
        {
            get
            {
                return _UploadDate;
            }
            set
            {
                OnUploadDateChanging(value);
                ReportPropertyChanging("UploadDate");
                _UploadDate = StructuralObject.SetValidValue(value, "UploadDate");
                ReportPropertyChanged("UploadDate");
                OnUploadDateChanged();
            }
        }
        private global::System.DateTime _UploadDate;
        partial void OnUploadDateChanging(global::System.DateTime value);
        partial void OnUploadDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false, "ImageName");
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNLAI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNLAI : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNLAI 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="updatatime">Updatatime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNLAI CreateWSNLAI(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime updatatime, global::System.Int32 cityID)
        {
            WSNLAI wSNLAI = new WSNLAI();
            wSNLAI.ID = id;
            wSNLAI.NodeAddress = nodeAddress;
            wSNLAI.Updatatime = updatatime;
            wSNLAI.CityID = cityID;
            return wSNLAI;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Updatatime
        {
            get
            {
                return _Updatatime;
            }
            set
            {
                OnUpdatatimeChanging(value);
                ReportPropertyChanging("Updatatime");
                _Updatatime = StructuralObject.SetValidValue(value, "Updatatime");
                ReportPropertyChanged("Updatatime");
                OnUpdatatimeChanged();
            }
        }
        private global::System.DateTime _Updatatime;
        partial void OnUpdatatimeChanging(global::System.DateTime value);
        partial void OnUpdatatimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                OnLaiChanging(value);
                ReportPropertyChanging("Lai");
                _Lai = StructuralObject.SetValidValue(value, "Lai");
                ReportPropertyChanged("Lai");
                OnLaiChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lai;
        partial void OnLaiChanging(Nullable<global::System.Decimal> value);
        partial void OnLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LaiSort
        {
            get
            {
                return _LaiSort;
            }
            set
            {
                OnLaiSortChanging(value);
                ReportPropertyChanging("LaiSort");
                _LaiSort = StructuralObject.SetValidValue(value, true, "LaiSort");
                ReportPropertyChanged("LaiSort");
                OnLaiSortChanged();
            }
        }
        private global::System.String _LaiSort;
        partial void OnLaiSortChanging(global::System.String value);
        partial void OnLaiSortChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNMail_Code")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNMail_Code : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNMail_Code 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="sendmailaddress">sendmailaddress 属性的初始值。</param>
        /// <param name="authorizationcode">authorizationcode 属性的初始值。</param>
        public static WSNMail_Code CreateWSNMail_Code(global::System.Int32 id, global::System.String sendmailaddress, global::System.String authorizationcode)
        {
            WSNMail_Code wSNMail_Code = new WSNMail_Code();
            wSNMail_Code.ID = id;
            wSNMail_Code.sendmailaddress = sendmailaddress;
            wSNMail_Code.authorizationcode = authorizationcode;
            return wSNMail_Code;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String sendmailaddress
        {
            get
            {
                return _sendmailaddress;
            }
            set
            {
                OnsendmailaddressChanging(value);
                ReportPropertyChanging("sendmailaddress");
                _sendmailaddress = StructuralObject.SetValidValue(value, false, "sendmailaddress");
                ReportPropertyChanged("sendmailaddress");
                OnsendmailaddressChanged();
            }
        }
        private global::System.String _sendmailaddress;
        partial void OnsendmailaddressChanging(global::System.String value);
        partial void OnsendmailaddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String authorizationcode
        {
            get
            {
                return _authorizationcode;
            }
            set
            {
                OnauthorizationcodeChanging(value);
                ReportPropertyChanging("authorizationcode");
                _authorizationcode = StructuralObject.SetValidValue(value, false, "authorizationcode");
                ReportPropertyChanged("authorizationcode");
                OnauthorizationcodeChanged();
            }
        }
        private global::System.String _authorizationcode;
        partial void OnauthorizationcodeChanging(global::System.String value);
        partial void OnauthorizationcodeChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNMessageRecevieTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNMessageRecevieTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNMessageRecevieTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="messageRecevieName">MessageRecevieName 属性的初始值。</param>
        /// <param name="messageRecevieSex">MessageRecevieSex 属性的初始值。</param>
        /// <param name="messageRecevieTel">MessageRecevieTel 属性的初始值。</param>
        /// <param name="netAuthorityNum">NetAuthorityNum 属性的初始值。</param>
        /// <param name="netAuthorityRemark">NetAuthorityRemark 属性的初始值。</param>
        public static WSNMessageRecevieTable CreateWSNMessageRecevieTable(global::System.Int32 id, global::System.String messageRecevieName, global::System.String messageRecevieSex, global::System.String messageRecevieTel, global::System.String netAuthorityNum, global::System.String netAuthorityRemark)
        {
            WSNMessageRecevieTable wSNMessageRecevieTable = new WSNMessageRecevieTable();
            wSNMessageRecevieTable.ID = id;
            wSNMessageRecevieTable.MessageRecevieName = messageRecevieName;
            wSNMessageRecevieTable.MessageRecevieSex = messageRecevieSex;
            wSNMessageRecevieTable.MessageRecevieTel = messageRecevieTel;
            wSNMessageRecevieTable.NetAuthorityNum = netAuthorityNum;
            wSNMessageRecevieTable.NetAuthorityRemark = netAuthorityRemark;
            return wSNMessageRecevieTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageRecevieName
        {
            get
            {
                return _MessageRecevieName;
            }
            set
            {
                OnMessageRecevieNameChanging(value);
                ReportPropertyChanging("MessageRecevieName");
                _MessageRecevieName = StructuralObject.SetValidValue(value, false, "MessageRecevieName");
                ReportPropertyChanged("MessageRecevieName");
                OnMessageRecevieNameChanged();
            }
        }
        private global::System.String _MessageRecevieName;
        partial void OnMessageRecevieNameChanging(global::System.String value);
        partial void OnMessageRecevieNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageRecevieSex
        {
            get
            {
                return _MessageRecevieSex;
            }
            set
            {
                OnMessageRecevieSexChanging(value);
                ReportPropertyChanging("MessageRecevieSex");
                _MessageRecevieSex = StructuralObject.SetValidValue(value, false, "MessageRecevieSex");
                ReportPropertyChanged("MessageRecevieSex");
                OnMessageRecevieSexChanged();
            }
        }
        private global::System.String _MessageRecevieSex;
        partial void OnMessageRecevieSexChanging(global::System.String value);
        partial void OnMessageRecevieSexChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageRecevieTel
        {
            get
            {
                return _MessageRecevieTel;
            }
            set
            {
                OnMessageRecevieTelChanging(value);
                ReportPropertyChanging("MessageRecevieTel");
                _MessageRecevieTel = StructuralObject.SetValidValue(value, false, "MessageRecevieTel");
                ReportPropertyChanged("MessageRecevieTel");
                OnMessageRecevieTelChanged();
            }
        }
        private global::System.String _MessageRecevieTel;
        partial void OnMessageRecevieTelChanging(global::System.String value);
        partial void OnMessageRecevieTelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageRecevieMail
        {
            get
            {
                return _MessageRecevieMail;
            }
            set
            {
                OnMessageRecevieMailChanging(value);
                ReportPropertyChanging("MessageRecevieMail");
                _MessageRecevieMail = StructuralObject.SetValidValue(value, true, "MessageRecevieMail");
                ReportPropertyChanged("MessageRecevieMail");
                OnMessageRecevieMailChanged();
            }
        }
        private global::System.String _MessageRecevieMail;
        partial void OnMessageRecevieMailChanging(global::System.String value);
        partial void OnMessageRecevieMailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetAuthorityNum
        {
            get
            {
                return _NetAuthorityNum;
            }
            set
            {
                OnNetAuthorityNumChanging(value);
                ReportPropertyChanging("NetAuthorityNum");
                _NetAuthorityNum = StructuralObject.SetValidValue(value, false, "NetAuthorityNum");
                ReportPropertyChanged("NetAuthorityNum");
                OnNetAuthorityNumChanged();
            }
        }
        private global::System.String _NetAuthorityNum;
        partial void OnNetAuthorityNumChanging(global::System.String value);
        partial void OnNetAuthorityNumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NetAuthorityRemark
        {
            get
            {
                return _NetAuthorityRemark;
            }
            set
            {
                OnNetAuthorityRemarkChanging(value);
                ReportPropertyChanging("NetAuthorityRemark");
                _NetAuthorityRemark = StructuralObject.SetValidValue(value, false, "NetAuthorityRemark");
                ReportPropertyChanged("NetAuthorityRemark");
                OnNetAuthorityRemarkChanged();
            }
        }
        private global::System.String _NetAuthorityRemark;
        partial void OnNetAuthorityRemarkChanging(global::System.String value);
        partial void OnNetAuthorityRemarkChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNNeighborTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNNeighborTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNNeighborTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="fatherNode">FatherNode 属性的初始值。</param>
        public static WSNNeighborTable CreateWSNNeighborTable(global::System.Int32 id, global::System.DateTime uploadTime, global::System.String fatherNode)
        {
            WSNNeighborTable wSNNeighborTable = new WSNNeighborTable();
            wSNNeighborTable.ID = id;
            wSNNeighborTable.UploadTime = uploadTime;
            wSNNeighborTable.FatherNode = fatherNode;
            return wSNNeighborTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherNode
        {
            get
            {
                return _FatherNode;
            }
            set
            {
                OnFatherNodeChanging(value);
                ReportPropertyChanging("FatherNode");
                _FatherNode = StructuralObject.SetValidValue(value, false, "FatherNode");
                ReportPropertyChanged("FatherNode");
                OnFatherNodeChanged();
            }
        }
        private global::System.String _FatherNode;
        partial void OnFatherNodeChanging(global::System.String value);
        partial void OnFatherNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChildNode
        {
            get
            {
                return _ChildNode;
            }
            set
            {
                OnChildNodeChanging(value);
                ReportPropertyChanging("ChildNode");
                _ChildNode = StructuralObject.SetValidValue(value, true, "ChildNode");
                ReportPropertyChanged("ChildNode");
                OnChildNodeChanged();
            }
        }
        private global::System.String _ChildNode;
        partial void OnChildNodeChanging(global::System.String value);
        partial void OnChildNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNNodeLocationTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNNodeLocationTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNNodeLocationTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="nodeLocation">NodeLocation 属性的初始值。</param>
        public static WSNNodeLocationTable CreateWSNNodeLocationTable(global::System.Int32 id, global::System.String nodeAddress, global::System.String nodeLocation)
        {
            WSNNodeLocationTable wSNNodeLocationTable = new WSNNodeLocationTable();
            wSNNodeLocationTable.ID = id;
            wSNNodeLocationTable.NodeAddress = nodeAddress;
            wSNNodeLocationTable.NodeLocation = nodeLocation;
            return wSNNodeLocationTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeLocation
        {
            get
            {
                return _NodeLocation;
            }
            set
            {
                OnNodeLocationChanging(value);
                ReportPropertyChanging("NodeLocation");
                _NodeLocation = StructuralObject.SetValidValue(value, false, "NodeLocation");
                ReportPropertyChanged("NodeLocation");
                OnNodeLocationChanged();
            }
        }
        private global::System.String _NodeLocation;
        partial void OnNodeLocationChanging(global::System.String value);
        partial void OnNodeLocationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNReadUploadData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNReadUploadData : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNReadUploadData 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNReadUploadData CreateWSNReadUploadData(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime uploadTime, global::System.Int32 cityID)
        {
            WSNReadUploadData wSNReadUploadData = new WSNReadUploadData();
            wSNReadUploadData.ID = id;
            wSNReadUploadData.NodeAddress = nodeAddress;
            wSNReadUploadData.UploadTime = uploadTime;
            wSNReadUploadData.CityID = cityID;
            return wSNReadUploadData;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                OnAirHumidityChanging(value);
                ReportPropertyChanging("AirHumidity");
                _AirHumidity = StructuralObject.SetValidValue(value, "AirHumidity");
                ReportPropertyChanged("AirHumidity");
                OnAirHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirHumidity;
        partial void OnAirHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirTemperature
        {
            get
            {
                return _AirTemperature;
            }
            set
            {
                OnAirTemperatureChanging(value);
                ReportPropertyChanging("AirTemperature");
                _AirTemperature = StructuralObject.SetValidValue(value, "AirTemperature");
                ReportPropertyChanged("AirTemperature");
                OnAirTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirTemperature;
        partial void OnAirTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnAirTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilHumidity
        {
            get
            {
                return _SoilHumidity;
            }
            set
            {
                OnSoilHumidityChanging(value);
                ReportPropertyChanging("SoilHumidity");
                _SoilHumidity = StructuralObject.SetValidValue(value, "SoilHumidity");
                ReportPropertyChanged("SoilHumidity");
                OnSoilHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilHumidity;
        partial void OnSoilHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilTemperature
        {
            get
            {
                return _SoilTemperature;
            }
            set
            {
                OnSoilTemperatureChanging(value);
                ReportPropertyChanging("SoilTemperature");
                _SoilTemperature = StructuralObject.SetValidValue(value, "SoilTemperature");
                ReportPropertyChanged("SoilTemperature");
                OnSoilTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilTemperature;
        partial void OnSoilTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rainfall
        {
            get
            {
                return _Rainfall;
            }
            set
            {
                OnRainfallChanging(value);
                ReportPropertyChanging("Rainfall");
                _Rainfall = StructuralObject.SetValidValue(value, "Rainfall");
                ReportPropertyChanged("Rainfall");
                OnRainfallChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rainfall;
        partial void OnRainfallChanging(Nullable<global::System.Decimal> value);
        partial void OnRainfallChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> APower
        {
            get
            {
                return _APower;
            }
            set
            {
                OnAPowerChanging(value);
                ReportPropertyChanging("APower");
                _APower = StructuralObject.SetValidValue(value, "APower");
                ReportPropertyChanged("APower");
                OnAPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _APower;
        partial void OnAPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnAPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BPower
        {
            get
            {
                return _BPower;
            }
            set
            {
                OnBPowerChanging(value);
                ReportPropertyChanging("BPower");
                _BPower = StructuralObject.SetValidValue(value, "BPower");
                ReportPropertyChanged("BPower");
                OnBPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _BPower;
        partial void OnBPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnBPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SPower
        {
            get
            {
                return _SPower;
            }
            set
            {
                OnSPowerChanging(value);
                ReportPropertyChanging("SPower");
                _SPower = StructuralObject.SetValidValue(value, "SPower");
                ReportPropertyChanged("SPower");
                OnSPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _SPower;
        partial void OnSPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnSPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                OnLaiChanging(value);
                ReportPropertyChanging("Lai");
                _Lai = StructuralObject.SetValidValue(value, "Lai");
                ReportPropertyChanged("Lai");
                OnLaiChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lai;
        partial void OnLaiChanging(Nullable<global::System.Decimal> value);
        partial void OnLaiChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNRouteTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNRouteTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNRouteTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="sourceNode">SourceNode 属性的初始值。</param>
        /// <param name="nextNode">NextNode 属性的初始值。</param>
        /// <param name="targetNode">TargetNode 属性的初始值。</param>
        public static WSNRouteTable CreateWSNRouteTable(global::System.Int32 id, global::System.DateTime uploadTime, global::System.String sourceNode, global::System.String nextNode, global::System.String targetNode)
        {
            WSNRouteTable wSNRouteTable = new WSNRouteTable();
            wSNRouteTable.ID = id;
            wSNRouteTable.UploadTime = uploadTime;
            wSNRouteTable.SourceNode = sourceNode;
            wSNRouteTable.NextNode = nextNode;
            wSNRouteTable.TargetNode = targetNode;
            return wSNRouteTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceNode
        {
            get
            {
                return _SourceNode;
            }
            set
            {
                OnSourceNodeChanging(value);
                ReportPropertyChanging("SourceNode");
                _SourceNode = StructuralObject.SetValidValue(value, false, "SourceNode");
                ReportPropertyChanged("SourceNode");
                OnSourceNodeChanged();
            }
        }
        private global::System.String _SourceNode;
        partial void OnSourceNodeChanging(global::System.String value);
        partial void OnSourceNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NextNode
        {
            get
            {
                return _NextNode;
            }
            set
            {
                OnNextNodeChanging(value);
                ReportPropertyChanging("NextNode");
                _NextNode = StructuralObject.SetValidValue(value, false, "NextNode");
                ReportPropertyChanged("NextNode");
                OnNextNodeChanged();
            }
        }
        private global::System.String _NextNode;
        partial void OnNextNodeChanging(global::System.String value);
        partial void OnNextNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TargetNode
        {
            get
            {
                return _TargetNode;
            }
            set
            {
                OnTargetNodeChanging(value);
                ReportPropertyChanging("TargetNode");
                _TargetNode = StructuralObject.SetValidValue(value, false, "TargetNode");
                ReportPropertyChanged("TargetNode");
                OnTargetNodeChanged();
            }
        }
        private global::System.String _TargetNode;
        partial void OnTargetNodeChanging(global::System.String value);
        partial void OnTargetNodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CityID;
        partial void OnCityIDChanging(Nullable<global::System.Int32> value);
        partial void OnCityIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNRTUploadData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNRTUploadData : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNRTUploadData 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNRTUploadData CreateWSNRTUploadData(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime uploadTime, global::System.Int32 cityID)
        {
            WSNRTUploadData wSNRTUploadData = new WSNRTUploadData();
            wSNRTUploadData.ID = id;
            wSNRTUploadData.NodeAddress = nodeAddress;
            wSNRTUploadData.UploadTime = uploadTime;
            wSNRTUploadData.CityID = cityID;
            return wSNRTUploadData;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                OnAirHumidityChanging(value);
                ReportPropertyChanging("AirHumidity");
                _AirHumidity = StructuralObject.SetValidValue(value, "AirHumidity");
                ReportPropertyChanged("AirHumidity");
                OnAirHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirHumidity;
        partial void OnAirHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirTemperature
        {
            get
            {
                return _AirTemperature;
            }
            set
            {
                OnAirTemperatureChanging(value);
                ReportPropertyChanging("AirTemperature");
                _AirTemperature = StructuralObject.SetValidValue(value, "AirTemperature");
                ReportPropertyChanged("AirTemperature");
                OnAirTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirTemperature;
        partial void OnAirTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnAirTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilHumidity
        {
            get
            {
                return _SoilHumidity;
            }
            set
            {
                OnSoilHumidityChanging(value);
                ReportPropertyChanging("SoilHumidity");
                _SoilHumidity = StructuralObject.SetValidValue(value, "SoilHumidity");
                ReportPropertyChanged("SoilHumidity");
                OnSoilHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilHumidity;
        partial void OnSoilHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilTemperature
        {
            get
            {
                return _SoilTemperature;
            }
            set
            {
                OnSoilTemperatureChanging(value);
                ReportPropertyChanging("SoilTemperature");
                _SoilTemperature = StructuralObject.SetValidValue(value, "SoilTemperature");
                ReportPropertyChanged("SoilTemperature");
                OnSoilTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilTemperature;
        partial void OnSoilTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rainfall
        {
            get
            {
                return _Rainfall;
            }
            set
            {
                OnRainfallChanging(value);
                ReportPropertyChanging("Rainfall");
                _Rainfall = StructuralObject.SetValidValue(value, "Rainfall");
                ReportPropertyChanged("Rainfall");
                OnRainfallChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rainfall;
        partial void OnRainfallChanging(Nullable<global::System.Decimal> value);
        partial void OnRainfallChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> APower
        {
            get
            {
                return _APower;
            }
            set
            {
                OnAPowerChanging(value);
                ReportPropertyChanging("APower");
                _APower = StructuralObject.SetValidValue(value, "APower");
                ReportPropertyChanged("APower");
                OnAPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _APower;
        partial void OnAPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnAPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BPower
        {
            get
            {
                return _BPower;
            }
            set
            {
                OnBPowerChanging(value);
                ReportPropertyChanging("BPower");
                _BPower = StructuralObject.SetValidValue(value, "BPower");
                ReportPropertyChanged("BPower");
                OnBPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _BPower;
        partial void OnBPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnBPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SPower
        {
            get
            {
                return _SPower;
            }
            set
            {
                OnSPowerChanging(value);
                ReportPropertyChanging("SPower");
                _SPower = StructuralObject.SetValidValue(value, "SPower");
                ReportPropertyChanged("SPower");
                OnSPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _SPower;
        partial void OnSPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnSPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                OnLaiChanging(value);
                ReportPropertyChanging("Lai");
                _Lai = StructuralObject.SetValidValue(value, "Lai");
                ReportPropertyChanged("Lai");
                OnLaiChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lai;
        partial void OnLaiChanging(Nullable<global::System.Decimal> value);
        partial void OnLaiChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNTimeSetTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNTimeSetTable : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNTimeSetTable 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="sleepTime">SleepTime 属性的初始值。</param>
        /// <param name="collectTime">CollectTime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        /// <param name="nodeID">NodeID 属性的初始值。</param>
        public static WSNTimeSetTable CreateWSNTimeSetTable(global::System.Int32 id, global::System.Int32 sleepTime, global::System.Int32 collectTime, global::System.Int32 cityID, global::System.Int32 nodeID)
        {
            WSNTimeSetTable wSNTimeSetTable = new WSNTimeSetTable();
            wSNTimeSetTable.ID = id;
            wSNTimeSetTable.SleepTime = sleepTime;
            wSNTimeSetTable.CollectTime = collectTime;
            wSNTimeSetTable.CityID = cityID;
            wSNTimeSetTable.NodeID = nodeID;
            return wSNTimeSetTable;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SleepTime
        {
            get
            {
                return _SleepTime;
            }
            set
            {
                OnSleepTimeChanging(value);
                ReportPropertyChanging("SleepTime");
                _SleepTime = StructuralObject.SetValidValue(value, "SleepTime");
                ReportPropertyChanged("SleepTime");
                OnSleepTimeChanged();
            }
        }
        private global::System.Int32 _SleepTime;
        partial void OnSleepTimeChanging(global::System.Int32 value);
        partial void OnSleepTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectTime
        {
            get
            {
                return _CollectTime;
            }
            set
            {
                OnCollectTimeChanging(value);
                ReportPropertyChanging("CollectTime");
                _CollectTime = StructuralObject.SetValidValue(value, "CollectTime");
                ReportPropertyChanged("CollectTime");
                OnCollectTimeChanged();
            }
        }
        private global::System.Int32 _CollectTime;
        partial void OnCollectTimeChanging(global::System.Int32 value);
        partial void OnCollectTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NodeID
        {
            get
            {
                return _NodeID;
            }
            set
            {
                OnNodeIDChanging(value);
                ReportPropertyChanging("NodeID");
                _NodeID = StructuralObject.SetValidValue(value, "NodeID");
                ReportPropertyChanged("NodeID");
                OnNodeIDChanged();
            }
        }
        private global::System.Int32 _NodeID;
        partial void OnNodeIDChanging(global::System.Int32 value);
        partial void OnNodeIDChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNUploadData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNUploadData : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNUploadData 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="nodeAddress">NodeAddress 属性的初始值。</param>
        /// <param name="uploadTime">UploadTime 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        public static WSNUploadData CreateWSNUploadData(global::System.Int32 id, global::System.String nodeAddress, global::System.DateTime uploadTime, global::System.Int32 cityID)
        {
            WSNUploadData wSNUploadData = new WSNUploadData();
            wSNUploadData.ID = id;
            wSNUploadData.NodeAddress = nodeAddress;
            wSNUploadData.UploadTime = uploadTime;
            wSNUploadData.CityID = cityID;
            return wSNUploadData;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NodeAddress
        {
            get
            {
                return _NodeAddress;
            }
            set
            {
                OnNodeAddressChanging(value);
                ReportPropertyChanging("NodeAddress");
                _NodeAddress = StructuralObject.SetValidValue(value, false, "NodeAddress");
                ReportPropertyChanged("NodeAddress");
                OnNodeAddressChanged();
            }
        }
        private global::System.String _NodeAddress;
        partial void OnNodeAddressChanging(global::System.String value);
        partial void OnNodeAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadTime
        {
            get
            {
                return _UploadTime;
            }
            set
            {
                OnUploadTimeChanging(value);
                ReportPropertyChanging("UploadTime");
                _UploadTime = StructuralObject.SetValidValue(value, "UploadTime");
                ReportPropertyChanged("UploadTime");
                OnUploadTimeChanged();
            }
        }
        private global::System.DateTime _UploadTime;
        partial void OnUploadTimeChanging(global::System.DateTime value);
        partial void OnUploadTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirHumidity
        {
            get
            {
                return _AirHumidity;
            }
            set
            {
                OnAirHumidityChanging(value);
                ReportPropertyChanging("AirHumidity");
                _AirHumidity = StructuralObject.SetValidValue(value, "AirHumidity");
                ReportPropertyChanged("AirHumidity");
                OnAirHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirHumidity;
        partial void OnAirHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnAirHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AirTemperature
        {
            get
            {
                return _AirTemperature;
            }
            set
            {
                OnAirTemperatureChanging(value);
                ReportPropertyChanging("AirTemperature");
                _AirTemperature = StructuralObject.SetValidValue(value, "AirTemperature");
                ReportPropertyChanged("AirTemperature");
                OnAirTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _AirTemperature;
        partial void OnAirTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnAirTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilHumidity
        {
            get
            {
                return _SoilHumidity;
            }
            set
            {
                OnSoilHumidityChanging(value);
                ReportPropertyChanging("SoilHumidity");
                _SoilHumidity = StructuralObject.SetValidValue(value, "SoilHumidity");
                ReportPropertyChanged("SoilHumidity");
                OnSoilHumidityChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilHumidity;
        partial void OnSoilHumidityChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilHumidityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SoilTemperature
        {
            get
            {
                return _SoilTemperature;
            }
            set
            {
                OnSoilTemperatureChanging(value);
                ReportPropertyChanging("SoilTemperature");
                _SoilTemperature = StructuralObject.SetValidValue(value, "SoilTemperature");
                ReportPropertyChanged("SoilTemperature");
                OnSoilTemperatureChanged();
            }
        }
        private Nullable<global::System.Decimal> _SoilTemperature;
        partial void OnSoilTemperatureChanging(Nullable<global::System.Decimal> value);
        partial void OnSoilTemperatureChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Rainfall
        {
            get
            {
                return _Rainfall;
            }
            set
            {
                OnRainfallChanging(value);
                ReportPropertyChanging("Rainfall");
                _Rainfall = StructuralObject.SetValidValue(value, "Rainfall");
                ReportPropertyChanged("Rainfall");
                OnRainfallChanged();
            }
        }
        private Nullable<global::System.Decimal> _Rainfall;
        partial void OnRainfallChanging(Nullable<global::System.Decimal> value);
        partial void OnRainfallChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> APower
        {
            get
            {
                return _APower;
            }
            set
            {
                OnAPowerChanging(value);
                ReportPropertyChanging("APower");
                _APower = StructuralObject.SetValidValue(value, "APower");
                ReportPropertyChanged("APower");
                OnAPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _APower;
        partial void OnAPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnAPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RSSI
        {
            get
            {
                return _RSSI;
            }
            set
            {
                OnRSSIChanging(value);
                ReportPropertyChanging("RSSI");
                _RSSI = StructuralObject.SetValidValue(value, "RSSI");
                ReportPropertyChanged("RSSI");
                OnRSSIChanged();
            }
        }
        private Nullable<global::System.Decimal> _RSSI;
        partial void OnRSSIChanging(Nullable<global::System.Decimal> value);
        partial void OnRSSIChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SPower
        {
            get
            {
                return _SPower;
            }
            set
            {
                OnSPowerChanging(value);
                ReportPropertyChanging("SPower");
                _SPower = StructuralObject.SetValidValue(value, "SPower");
                ReportPropertyChanged("SPower");
                OnSPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _SPower;
        partial void OnSPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnSPowerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Lai
        {
            get
            {
                return _Lai;
            }
            set
            {
                OnLaiChanging(value);
                ReportPropertyChanging("Lai");
                _Lai = StructuralObject.SetValidValue(value, "Lai");
                ReportPropertyChanged("Lai");
                OnLaiChanged();
            }
        }
        private Nullable<global::System.Decimal> _Lai;
        partial void OnLaiChanging(Nullable<global::System.Decimal> value);
        partial void OnLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CI
        {
            get
            {
                return _CI;
            }
            set
            {
                OnCIChanging(value);
                ReportPropertyChanging("CI");
                _CI = StructuralObject.SetValidValue(value, "CI");
                ReportPropertyChanged("CI");
                OnCIChanged();
            }
        }
        private Nullable<global::System.Decimal> _CI;
        partial void OnCIChanging(Nullable<global::System.Decimal> value);
        partial void OnCIChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DIFN
        {
            get
            {
                return _DIFN;
            }
            set
            {
                OnDIFNChanging(value);
                ReportPropertyChanging("DIFN");
                _DIFN = StructuralObject.SetValidValue(value, "DIFN");
                ReportPropertyChanged("DIFN");
                OnDIFNChanged();
            }
        }
        private Nullable<global::System.Decimal> _DIFN;
        partial void OnDIFNChanging(Nullable<global::System.Decimal> value);
        partial void OnDIFNChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MLai
        {
            get
            {
                return _MLai;
            }
            set
            {
                OnMLaiChanging(value);
                ReportPropertyChanging("MLai");
                _MLai = StructuralObject.SetValidValue(value, "MLai");
                ReportPropertyChanged("MLai");
                OnMLaiChanged();
            }
        }
        private Nullable<global::System.Decimal> _MLai;
        partial void OnMLaiChanging(Nullable<global::System.Decimal> value);
        partial void OnMLaiChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MTA
        {
            get
            {
                return _MTA;
            }
            set
            {
                OnMTAChanging(value);
                ReportPropertyChanging("MTA");
                _MTA = StructuralObject.SetValidValue(value, "MTA");
                ReportPropertyChanged("MTA");
                OnMTAChanged();
            }
        }
        private Nullable<global::System.Decimal> _MTA;
        partial void OnMTAChanging(Nullable<global::System.Decimal> value);
        partial void OnMTAChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BPower
        {
            get
            {
                return _BPower;
            }
            set
            {
                OnBPowerChanging(value);
                ReportPropertyChanging("BPower");
                _BPower = StructuralObject.SetValidValue(value, "BPower");
                ReportPropertyChanged("BPower");
                OnBPowerChanged();
            }
        }
        private Nullable<global::System.Decimal> _BPower;
        partial void OnBPowerChanging(Nullable<global::System.Decimal> value);
        partial void OnBPowerChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNUser 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="userPassword">UserPassword 属性的初始值。</param>
        /// <param name="nickName">NickName 属性的初始值。</param>
        /// <param name="remark">Remark 属性的初始值。</param>
        /// <param name="isAdmin">IsAdmin 属性的初始值。</param>
        public static WSNUser CreateWSNUser(global::System.Int32 id, global::System.String userName, global::System.String userPassword, global::System.String nickName, global::System.String remark, global::System.Boolean isAdmin)
        {
            WSNUser wSNUser = new WSNUser();
            wSNUser.ID = id;
            wSNUser.UserName = userName;
            wSNUser.UserPassword = userPassword;
            wSNUser.NickName = nickName;
            wSNUser.Remark = remark;
            wSNUser.IsAdmin = isAdmin;
            return wSNUser;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, false, "UserPassword");
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false, "NickName");
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false, "Remark");
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value, "IsAdmin");
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private global::System.Boolean _IsAdmin;
        partial void OnIsAdminChanging(global::System.Boolean value);
        partial void OnIsAdminChanged();

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WirelessSensorNetworkModel", Name="WSNUser_WSNCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WSNUser_WSNCity : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WSNUser_WSNCity 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="cityID">CityID 属性的初始值。</param>
        /// <param name="dFSelected">DFSelected 属性的初始值。</param>
        public static WSNUser_WSNCity CreateWSNUser_WSNCity(global::System.Int32 id, global::System.Int32 userID, global::System.Int32 cityID, global::System.Boolean dFSelected)
        {
            WSNUser_WSNCity wSNUser_WSNCity = new WSNUser_WSNCity();
            wSNUser_WSNCity.ID = id;
            wSNUser_WSNCity.UserID = userID;
            wSNUser_WSNCity.CityID = cityID;
            wSNUser_WSNCity.DFSelected = dFSelected;
            return wSNUser_WSNCity;
        }

        #endregion

        #region 简单属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityID
        {
            get
            {
                return _CityID;
            }
            set
            {
                OnCityIDChanging(value);
                ReportPropertyChanging("CityID");
                _CityID = StructuralObject.SetValidValue(value, "CityID");
                ReportPropertyChanged("CityID");
                OnCityIDChanged();
            }
        }
        private global::System.Int32 _CityID;
        partial void OnCityIDChanging(global::System.Int32 value);
        partial void OnCityIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean DFSelected
        {
            get
            {
                return _DFSelected;
            }
            set
            {
                OnDFSelectedChanging(value);
                ReportPropertyChanging("DFSelected");
                _DFSelected = StructuralObject.SetValidValue(value, "DFSelected");
                ReportPropertyChanged("DFSelected");
                OnDFSelectedChanged();
            }
        }
        private global::System.Boolean _DFSelected;
        partial void OnDFSelectedChanging(global::System.Boolean value);
        partial void OnDFSelectedChanged();

        #endregion

    }

    #endregion

}
